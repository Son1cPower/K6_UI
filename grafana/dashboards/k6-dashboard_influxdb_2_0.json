{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "the same k6 dashboard but insteda of request urls, their tags or transaction names are used",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 35,
      "panels": [],
      "title": "Errors stats",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 14,
        "x": 0,
        "y": 1
      },
      "id": 37,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"url\")\r\n  |> filter(fn: (r) => r[\"error\"] >=\"\")\r\n  |> count()\r\n  |> group()\r\n  |> rename(columns: {\"_value\":\"Errors found\", \"name\":\"requestUrl\"})\r\n  |> keep(columns: [\"requestUrl\", \"error\", \"error_code\", \"Errors found\"])",
          "refId": "A"
        }
      ],
      "title": "Errors summary",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 17,
      "panels": [],
      "title": "Summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "description": "send bytes for the whole time of the test",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "yellow",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 5
      },
      "id": 19,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"data_sent\")\r\n  |> group(columns: [\"_measurement\"])\r\n  |> sum()",
          "refId": "A"
        }
      ],
      "title": "Sent bytes",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "description": "received bytes for the whole time of the test",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "purple",
                "value": null
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 3,
        "y": 5
      },
      "id": 20,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"data_received\")\r\n  |> group(columns: [\"_measurement\"])\r\n  |> sum()",
          "refId": "A"
        }
      ],
      "title": "Received bytes",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 6,
        "y": 5
      },
      "id": 29,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"_field\"])\r\n  |> sum()",
          "refId": "A"
        }
      ],
      "title": "Requests count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 8,
        "y": 5
      },
      "id": 33,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_failed\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"_field\"])\r\n  |> sum()",
          "refId": "A"
        }
      ],
      "title": "Errors Count",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 11,
        "y": 5
      },
      "id": 22,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "total_count = from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"_field\"])\r\n  |> sum()\r\n  |> rename(columns: {\"_value\": \"total_count\"})\r\n\r\n// Query to get error count\r\nerror_count = from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_failed\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"_field\"])\r\n  |> sum()\r\n  |> rename(columns: {\"_value\": \"error_count\"})\r\n\r\n// Join the two queries on common fields and calculate error percentage\r\nerror_percentage = join(tables: {total: total_count, errors: error_count}, on: [\"_field\"])\r\n  |> map(fn: (r) => ({\r\n    _time: r._time,\r\n    error_percentage: (r.error_count / r.total_count) * 100.0\r\n  }))\r\n\r\nerror_percentage",
          "refId": "A"
        }
      ],
      "title": "Errors percentage",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 9,
        "x": 14,
        "y": 5
      },
      "id": 31,
      "options": {
        "colorMode": "none",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"name\"])\r\n  |> aggregateWindow(every: ${aggregation}s, fn: sum, createEmpty: false) \r\n  |> toFloat()\r\n  |> group()\r\n  |> map(fn: (r) => ({ r with _value: float(v: r._value /float(v: ${aggregation})) }))",
          "refId": "A"
        }
      ],
      "title": "Overall throughput",
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 27,
      "panels": [],
      "title": "Throughput",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Throughput",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "VUs"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "custom.axisLabel",
                "value": "Virtual Users"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 0,
        "y": 9
      },
      "id": 24,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.1+security-01",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"requestName\"])\r\n  |> aggregateWindow(every: ${aggregation}s, fn: count, createEmpty: false) \r\n  |> toFloat()\r\n  |> map(fn: (r) => ({ r with _value: float(v: r._value /float(v: ${aggregation})) }))",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"vus\" and r[\"_field\"] == \"value\")\r\n  |> aggregateWindow(every: ${aggregation}s, fn: mean, createEmpty: false)\r\n  |> keep(columns: [\"_time\", \"_value\", \"name\"])\r\n  |> rename(columns: {\"_value\": \"VUs\"})",
          "refId": "B"
        }
      ],
      "title": "Overall Throughput per request",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Throughput",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "VUs"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "custom.axisLabel",
                "value": "Virtual Users"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 8,
        "y": 9
      },
      "id": 25,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.1+security-01",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\" and r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"status\"] >= \"200\" and  r[\"status\"] <= \"399\")\r\n  |> group(columns: [\"requestName\"])\r\n  |> aggregateWindow(every: ${aggregation}s, fn: count, createEmpty: false) \r\n  |> toFloat()\r\n  |> map(fn: (r) => ({ r with _value: float(v: r._value /float(v: ${aggregation})) }))",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"vus\" and r[\"_field\"] == \"value\")\r\n  |> keep(columns: [\"_time\", \"_value\", \"name\"])\r\n  |> rename(columns: {\"_value\": \"VUs\"})",
          "refId": "B"
        }
      ],
      "title": "Overall Throughput per request (\"pass\")",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 16,
        "y": 9
      },
      "id": 39,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.1+security-01",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"status\"])\r\n  |> aggregateWindow(every: ${aggregation}s, fn: count, createEmpty: false)\r\n  |> keep(columns: [\"_value\", \"_time\", \"status\"])",
          "refId": "A"
        }
      ],
      "title": "Codes throughput",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 15,
      "panels": [],
      "title": "Network traffic",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P1D92AD4B6987FA03"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  ""
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "values= \r\nfrom(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"endpoint_data_recv\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])\r\n\r\nurls= \r\nfrom(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"endpoint_data_recv\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"url\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])\r\n\r\njoin(\r\n    tables: {urls,values},\r\n    on:[\"_time\"]\r\n    )\r\n\r\n|> rename(columns: {\"_value_urls\": \"url\",\"_value_values\":\"\"})\r\n|> keep(columns: [\"url\", \"_time\",\"\"])\r\n|> group(columns: [\"url\"])",
          "refId": "A"
        }
      ],
      "title": "Received bytes per request",
      "type": "timeseries"
    },
    {
      "datasource": {},
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 28
      },
      "id": 13,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "values= \r\nfrom(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"endpoint_data_sent\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])\r\n\r\nurls= \r\nfrom(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"endpoint_data_sent\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"url\")\r\n  |> group(columns: [\"_measurement\", \"_field\"])\r\n\r\njoin(\r\n    tables: {urls,values},\r\n    on:[\"_time\"]\r\n    )\r\n\r\n|> rename(columns: {\"_value_urls\": \"url\",\"_value_values\":\"\"})\r\n|> keep(columns: [\"url\", \"_time\",\"\"])\r\n|> group(columns: [\"url\"])",
          "refId": "A"
        }
      ],
      "title": "Sent bytes per request",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 35
      },
      "id": 10,
      "panels": [],
      "title": "Response times",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": ""
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Response Time, ms",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "VUs"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "custom.axisLabel",
                "value": "Virtual Users"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 36
      },
      "id": 40,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"requestName\"])\r\n  |> keep(columns: [\"_time\", \"_value\", \"requestName\"])",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"vus\" and r[\"_field\"] == \"value\")\r\n  |> keep(columns: [\"_time\", \"_value\", \"name\"])\r\n  |> rename(columns: {\"_value\": \"VUs\"})\r\n ",
          "refId": "B"
        }
      ],
      "title": "Response times",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 44
      },
      "id": 8,
      "panels": [],
      "title": "Summary",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P1D92AD4B6987FA03"
      },
      "description": "test dashboard (will be changed later) for k6-Grafana integration demo",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false,
            "minWidth": 50
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "TPS"
            },
            "properties": [
              {
                "id": "unit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TPM"
            },
            "properties": [
              {
                "id": "unit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TPH"
            },
            "properties": [
              {
                "id": "unit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "requestName"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 430
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Count"
            },
            "properties": [
              {
                "id": "unit"
              },
              {
                "id": "decimals"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 45
      },
      "id": 2,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 3,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Avg\"})\r\n  |> keep(columns: [\"group_name\", \"Avg\"])",
          "refId": "Average"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> count()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Count\"})\r\n  |> keep(columns: [\"group_name\", \"Count\"])",
          "refId": "Count"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> min()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Min\"})\r\n  |> keep(columns: [\"group_name\", \"Min\"])",
          "refId": "Minimum"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> max()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Max\"})\r\n  |> keep(columns: [\"group_name\", \"Max\"])",
          "refId": "Maximum"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> median()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Med\"})\r\n  |> keep(columns: [\"group_name\", \"Med\"])",
          "refId": "Median"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> quantile(q: 0.75)\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"75%\"})\r\n  |> keep(columns: [\"group_name\", \"75%\"])",
          "refId": "75%"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> quantile(q: 0.90)\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"90%\"})\r\n  |> keep(columns: [\"group_name\", \"90%\"])",
          "refId": "90%"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> quantile(q: 0.95)\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"95%\"})\r\n  |> keep(columns: [\"group_name\", \"95%\"])",
          "refId": "95%"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": true,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"group_name\"])\r\n  |> stddev()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"stddev\"})\r\n  |> keep(columns: [\"group_name\", \"stddev\"])",
          "refId": "Standard deviation"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "tpsCalculator = () => {\r\ncount = from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"group_name\"])\r\n  |> count()\r\n  |> toFloat()\r\n  |> group()\r\n  |> keep(columns: [\"_value\", \"group_name\"])\r\n\r\n integral = from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"group_duration\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"group_name\"])\r\n  |> integral()\r\n  |> toFloat()\r\n  |> group() \r\n  |> keep(columns: [\"_value\", \"group_name\"])\r\n  \r\n  return join(\r\n      tables:{count:count, integral:integral},\r\n      on:[\"group_name\"]\r\n    )\r\n    |> map(fn:(r) => ({\r\n             group_name: r.group_name,\r\n             TPS: r._value_count / r._value_integral,\r\n             TPM: (r._value_count / r._value_integral) * 60.0,\r\n             TPH: (r._value_count / r._value_integral) * 60.0 * 60.0,        \r\n    }))       \r\n}\r\n\r\ntpsCalculator()",
          "refId": "TPS"
        }
      ],
      "title": "Summary k6",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P1D92AD4B6987FA03"
      },
      "description": "test dashboard (will be changed later) for k6-Grafana integration demo",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false,
            "minWidth": 50
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "TPS"
            },
            "properties": [
              {
                "id": "unit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TPM"
            },
            "properties": [
              {
                "id": "unit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TPH"
            },
            "properties": [
              {
                "id": "unit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "requestName"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 430
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Count"
            },
            "properties": [
              {
                "id": "unit"
              },
              {
                "id": "decimals"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 314
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 60
      },
      "id": 41,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Avg\"})\r\n  |> keep(columns: [\"name\", \"Avg\"])",
          "refId": "Average"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> count()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Count\"})\r\n  |> keep(columns: [\"name\", \"Count\"])",
          "refId": "Count"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> min()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Min\"})\r\n  |> keep(columns: [\"name\", \"Min\"])",
          "refId": "Minimum"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> max()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Max\"})\r\n  |> keep(columns: [\"name\", \"Max\"])",
          "refId": "Maximum"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> median()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Med\"})\r\n  |> keep(columns: [\"name\", \"Med\"])",
          "refId": "Median"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> quantile(q: 0.75)\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"75%\"})\r\n  |> keep(columns: [\"name\", \"75%\"])",
          "refId": "75%"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> quantile(q: 0.90)\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"90%\"})\r\n  |> keep(columns: [\"name\", \"90%\"])",
          "refId": "90%"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> quantile(q: 0.95)\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"95%\"})\r\n  |> keep(columns: [\"name\", \"95%\"])",
          "refId": "95%"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> stddev()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"stddev\"})\r\n  |> keep(columns: [\"name\", \"stddev\"])",
          "refId": "Standard deviation"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "tpsCalculator = () => {\r\ncount = from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"name\"])\r\n  |> count()\r\n  |> toFloat()\r\n  |> group()\r\n  |> keep(columns: [\"_value\", \"name\"])\r\n\r\n integral = from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_reqs\" and r[\"_field\"] == \"value\")\r\n  |> group(columns: [\"name\"])\r\n  |> integral()\r\n  |> toFloat()\r\n  |> group() \r\n  |> keep(columns: [\"_value\", \"name\"])\r\n  \r\n  return join(\r\n      tables:{count:count, integral:integral},\r\n      on:[\"name\"]\r\n    )\r\n    |> map(fn:(r) => ({\r\n             name: r.name,\r\n             TPS: r._value_count / r._value_integral,\r\n             TPM: (r._value_count / r._value_integral) * 60.0,\r\n             TPH: (r._value_count / r._value_integral) * 60.0 * 60.0,        \r\n    }))       \r\n}\r\n\r\ntpsCalculator()",
          "refId": "TPS"
        }
      ],
      "title": "Summary k6",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "P1D92AD4B6987FA03"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false,
            "minWidth": 60,
            "width": 150
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 671
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 75
      },
      "id": 6,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Response time"
          }
        ]
      },
      "pluginVersion": "10.1.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_duration\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Response time\"})\r\n  |> keep(columns: [\"name\", \"Response time\"])",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_sending\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Sending time\"})\r\n  |> keep(columns: [\"name\", \"Sending time\"])",
          "refId": "D"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_receiving\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Receive time\"})\r\n  |> keep(columns: [\"name\", \"Receive time\"])",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_waiting\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"TTFB\"})\r\n  |> keep(columns: [\"name\", \"TTFB\"])",
          "refId": "F"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_tls_handshaking\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"TLS_handshake\"})\r\n  |> keep(columns: [\"name\", \"TLS_handshake\"])",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_connecting\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"TCP Connect\"})\r\n  |> keep(columns: [\"name\", \"TCP Connect\"])",
          "refId": "E"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": ""
          },
          "hide": false,
          "query": "from(bucket: \"k6\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http_req_blocked\" and r[\"_field\"] == \"value\")   \r\n  |> group(columns: [\"name\"])\r\n  |> mean()\r\n  |> group()\r\n  |> rename(columns: {\"_value\": \"Wait for TCP slot\"})\r\n  |> keep(columns: [\"name\", \"Wait for TCP slot\"])",
          "refId": "G"
        }
      ],
      "title": "Response times detailed",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "1",
          "value": "1"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Aggregation Interval",
        "multi": false,
        "name": "aggregation",
        "options": [
          {
            "selected": true,
            "text": "1",
            "value": "1"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          {
            "selected": false,
            "text": "30",
            "value": "30"
          },
          {
            "selected": false,
            "text": "60",
            "value": "60"
          },
          {
            "selected": false,
            "text": "600",
            "value": "600"
          },
          {
            "selected": false,
            "text": "1800",
            "value": "1800"
          },
          {
            "selected": false,
            "text": "3600",
            "value": "3600"
          }
        ],
        "query": "1,10,30,60,600,1800,3600",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "https://kong-eureka-bugfest-ramsons-consortium.int.aws.folio.org/bl-users/_self",
          "value": "https://kong-eureka-bugfest-ramsons-consortium.int.aws.folio.org/bl-users/_self"
        },
        "datasource": {
          "type": "influxdb",
          "uid": ""
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementTagValues(\r\n  bucket: \"k6\",\r\n  measurement: \"http_req_duration\",\r\n  tag: \"name\"\r\n)",
        "hide": 0,
        "includeAll": false,
        "label": "Individual request",
        "multi": false,
        "name": "request",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.measurementTagValues(\r\n  bucket: \"k6\",\r\n  measurement: \"http_req_duration\",\r\n  tag: \"name\"\r\n)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": ""
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n    bucket: \"k6\",\r\n    tag: \"RUN_ID\"\r\n)",
        "description": "You can filter the data using run id",
        "hide": 0,
        "includeAll": true,
        "label": "Run Id",
        "multi": true,
        "name": "runId",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n    bucket: \"k6\",\r\n    tag: \"RUN_ID\"\r\n)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2025-07-11T11:56:59.826Z",
    "to": "2025-07-11T11:57:59.404Z"
  },
  "timepicker": {},
  "timezone": "",
  "title": "k6 metrics tags",
  "uid": "bd9dc993-69a2-4ce8-9ab8-243880c559d9",
  "version": 1,
  "weekStart": ""
}